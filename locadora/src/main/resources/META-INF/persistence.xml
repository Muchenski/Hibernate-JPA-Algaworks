<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
  version="2.1">
	
	<persistence-unit name="locadoraVeiculoPU" transaction-type="RESOURCE_LOCAL">
	
	<!-- Para namedQueries muito grande -->
	<mapping-file>META-INF/search/manufacturer.xml</mapping-file>
		<properties>
			<property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/locadora"/>
			<property name="javax.persistence.jdbc.user" value="postgres"/>
			<property name="javax.persistence.jdbc.password" value="admin"/>
			<property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
			
			<!-- Novas propriedades do JPA 2.1 -->
			
			<!-- drop-and-create | none | create | drop -->
			<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/>
			
			<!-- Valores possíveis: metadata | script | metadata-then-script | script-then-metadata -->
			<!-- Valor "metadata-then-script" -> irá executar a action definida começando pelas classes e depois irá rodar o script definido para criação das tabelas -->
			<property name="javax.persistence.schema-generation.create-source" value="metadata-then-script"/>
			
			<!-- Valores possíveis: metadata | script | metadata-then-script | script-then-metadata -->
			<!-- "metadata-then-script" -> irá executar a action definida começando pelas classes e depois irá rodar o script definido para remoção das tabelas -->
			<property name="javax.persistence.schema-generation.drop-source" value="metadata-then-script"/>
			
			<!-- Definindo os locais que estão os scripts para create e drop -->
			<property name="javax.persistence.schema-generation.create-script-source" value="META-INF/SQL/create.sql"/>
			<property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/SQL/drop.sql"/>
			
			<!-- Comentado para não conflitar com a classe de seeding.
			
			Definindo script para carregar dados de teste no banco
			<property name="javax.persistence.sql-load-script-source" value="META-INF/SQL/inserts.sql"/>
			
			 -->
			 
			<!-- 
			
			validate | update | create | create-drop
			<property name="hibernate.hbm2ddl.auto" value="create-drop"/>
			
			-->
			
			<property name="hibernate.show_sql" value="true"/>
			<property name="hibernate.format_sql" value="true"/>

			<property name="hibernate.cache.use_second_level_cache" value="true"/>
			<property name="hibernate.cache.region.factory_class" value="org.hibernate.testing.cache.CachingRegionFactory"/>
		</properties>
	</persistence-unit>
	
</persistence>